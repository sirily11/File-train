/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FileStorage, FileStorageInterface } from "../FileStorage";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "fileId",
            type: "string",
          },
          {
            internalType: "string",
            name: "fileName",
            type: "string",
          },
          {
            internalType: "string",
            name: "fileType",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "fileSize",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "fileOwner",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "fileCreated",
            type: "uint256",
          },
        ],
        internalType: "struct FileStorage.FileMetaData",
        name: "file",
        type: "tuple",
      },
      {
        internalType: "string[]",
        name: "group",
        type: "string[]",
      },
    ],
    name: "addFile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "fileId",
        type: "string",
      },
      {
        internalType: "string",
        name: "senderId",
        type: "string",
      },
    ],
    name: "check_permission",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "deleteFile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFileSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getFilesInRange",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "fileId",
            type: "string",
          },
          {
            internalType: "string",
            name: "fileName",
            type: "string",
          },
          {
            internalType: "string",
            name: "fileType",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "fileSize",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "fileOwner",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "fileCreated",
            type: "uint256",
          },
        ],
        internalType: "struct FileStorage.FileMetaData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611815806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631322f7fa1461005c5780632108f9e31461007a5780637944ddc1146100aa5780639076345c146100c6578063c5b42006146100f6575b600080fd5b610064610112565b6040516100719190610d9d565b60405180910390f35b610094600480360381019061008f9190610df8565b61015b565b6040516100a19190611040565b60405180910390f35b6100c460048036038101906100bf9190611397565b61057a565b005b6100e060048036038101906100db919061140f565b6106e8565b6040516100ed91906114d1565b60405180910390f35b610110600480360381019061010b91906114f3565b610888565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905090565b606060008290506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508111156101f0576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905090505b600084826101fe919061154f565b905060008167ffffffffffffffff81111561021c5761021b611067565b5b60405190808252806020026020018201604052801561025557816020015b610242610b5a565b81526020019060019003908161023a5790505b5090506000808790505b8382101561056c576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106102b7576102b6611583565b5b90600052602060002090600602016040518060c00160405290816000820180546102e0906115e1565b80601f016020809104026020016040519081016040528092919081815260200182805461030c906115e1565b80156103595780601f1061032e57610100808354040283529160200191610359565b820191906000526020600020905b81548152906001019060200180831161033c57829003601f168201915b50505050508152602001600182018054610372906115e1565b80601f016020809104026020016040519081016040528092919081815260200182805461039e906115e1565b80156103eb5780601f106103c0576101008083540402835291602001916103eb565b820191906000526020600020905b8154815290600101906020018083116103ce57829003601f168201915b50505050508152602001600282018054610404906115e1565b80601f0160208091040260200160405190810160405280929190818152602001828054610430906115e1565b801561047d5780601f106104525761010080835404028352916020019161047d565b820191906000526020600020905b81548152906001019060200180831161046057829003601f168201915b50505050508152602001600382015481526020016004820180546104a0906115e1565b80601f01602080910402602001604051908101604052809291908181526020018280546104cc906115e1565b80156105195780601f106104ee57610100808354040283529160200191610519565b820191906000526020600020905b8154815290600101906020018083116104fc57829003601f168201915b5050505050815260200160058201548152505083838151811061053f5761053e611583565b5b60200260200101819052506001826105579190611613565b9150808061056490611669565b91505061025f565b508194505050505092915050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000190805190602001906105fe929190610b90565b50602082015181600101908051906020019061061b929190610b90565b506040820151816002019080519060200190610638929190610b90565b5060608201518160030155608082015181600401908051906020019061065f929190610b90565b5060a082015181600501555050806001836000015160405161068191906116ee565b908152602001604051809103902060010190805190602001906106a5929190610c16565b508160200151600183600001516040516106bf91906116ee565b908152602001604051809103902060000190805190602001906106e3929190610b90565b505050565b606060005b6001846040516106fd91906116ee565b90815260200160405180910390206001018054905081101561086e5760018460405161072991906116ee565b9081526020016040518091039020600101818154811061074c5761074b611583565b5b906000526020600020016040516020016107669190611799565b604051602081830303815290604052805190602001208360405160200161078d91906116ee565b60405160208183030381529060405280519060200120141561085b576001846040516107b991906116ee565b908152602001604051809103902060000180546107d5906115e1565b80601f0160208091040260200160405190810160405280929190818152602001828054610801906115e1565b801561084e5780601f106108235761010080835404028352916020019161084e565b820191906000526020600020905b81548152906001019060200180831161083157829003601f168201915b5050505050915050610882565b808061086690611669565b9150506106ed565b506040518060200160405280600081525090505b92915050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610b575760008190505b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050610925919061154f565b811015610a9e576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001826109779190611613565b8154811061098857610987611583565b5b90600052602060002090600602016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106109e6576109e5611583565b5b90600052602060002090600602016000820181600001908054610a08906115e1565b610a13929190610c76565b506001820181600101908054610a28906115e1565b610a33929190610c76565b506002820181600201908054610a48906115e1565b610a53929190610c76565b50600382015481600301556004820181600401908054610a72906115e1565b610a7d929190610c76565b50600582015481600501559050508080610a9690611669565b9150506108d7565b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480610aed57610aec6117b0565b5b600190038181906000526020600020906006020160008082016000610b129190610d03565b600182016000610b229190610d03565b600282016000610b329190610d03565b6003820160009055600482016000610b4a9190610d03565b6005820160009055505090555b50565b6040518060c001604052806060815260200160608152602001606081526020016000815260200160608152602001600081525090565b828054610b9c906115e1565b90600052602060002090601f016020900481019282610bbe5760008555610c05565b82601f10610bd757805160ff1916838001178555610c05565b82800160010185558215610c05579182015b82811115610c04578251825591602001919060010190610be9565b5b509050610c129190610d43565b5090565b828054828255906000526020600020908101928215610c65579160200282015b82811115610c64578251829080519060200190610c54929190610b90565b5091602001919060010190610c36565b5b509050610c729190610d60565b5090565b828054610c82906115e1565b90600052602060002090601f016020900481019282610ca45760008555610cf2565b82601f10610cb55780548555610cf2565b82800160010185558215610cf257600052602060002091601f016020900482015b82811115610cf1578254825591600101919060010190610cd6565b5b509050610cff9190610d43565b5090565b508054610d0f906115e1565b6000825580601f10610d215750610d40565b601f016020900490600052602060002090810190610d3f9190610d43565b5b50565b5b80821115610d5c576000816000905550600101610d44565b5090565b5b80821115610d805760008181610d779190610d03565b50600101610d61565b5090565b6000819050919050565b610d9781610d84565b82525050565b6000602082019050610db26000830184610d8e565b92915050565b6000604051905090565b600080fd5b600080fd5b610dd581610d84565b8114610de057600080fd5b50565b600081359050610df281610dcc565b92915050565b60008060408385031215610e0f57610e0e610dc2565b5b6000610e1d85828601610de3565b9250506020610e2e85828601610de3565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e9e578082015181840152602081019050610e83565b83811115610ead576000848401525b50505050565b6000601f19601f8301169050919050565b6000610ecf82610e64565b610ed98185610e6f565b9350610ee9818560208601610e80565b610ef281610eb3565b840191505092915050565b610f0681610d84565b82525050565b600060c0830160008301518482036000860152610f298282610ec4565b91505060208301518482036020860152610f438282610ec4565b91505060408301518482036040860152610f5d8282610ec4565b9150506060830151610f726060860182610efd565b5060808301518482036080860152610f8a8282610ec4565b91505060a0830151610f9f60a0860182610efd565b508091505092915050565b6000610fb68383610f0c565b905092915050565b6000602082019050919050565b6000610fd682610e38565b610fe08185610e43565b935083602082028501610ff285610e54565b8060005b8581101561102e578484038952815161100f8582610faa565b945061101a83610fbe565b925060208a01995050600181019050610ff6565b50829750879550505050505092915050565b6000602082019050818103600083015261105a8184610fcb565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61109f82610eb3565b810181811067ffffffffffffffff821117156110be576110bd611067565b5b80604052505050565b60006110d1610db8565b90506110dd8282611096565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff82111561110c5761110b611067565b5b61111582610eb3565b9050602081019050919050565b82818337600083830152505050565b600061114461113f846110f1565b6110c7565b9050828152602081018484840111156111605761115f6110ec565b5b61116b848285611122565b509392505050565b600082601f830112611188576111876110e7565b5b8135611198848260208601611131565b91505092915050565b600060c082840312156111b7576111b6611062565b5b6111c160c06110c7565b9050600082013567ffffffffffffffff8111156111e1576111e06110e2565b5b6111ed84828501611173565b600083015250602082013567ffffffffffffffff811115611211576112106110e2565b5b61121d84828501611173565b602083015250604082013567ffffffffffffffff811115611241576112406110e2565b5b61124d84828501611173565b604083015250606061126184828501610de3565b606083015250608082013567ffffffffffffffff811115611285576112846110e2565b5b61129184828501611173565b60808301525060a06112a584828501610de3565b60a08301525092915050565b600067ffffffffffffffff8211156112cc576112cb611067565b5b602082029050602081019050919050565b600080fd5b60006112f56112f0846112b1565b6110c7565b90508083825260208201905060208402830185811115611318576113176112dd565b5b835b8181101561135f57803567ffffffffffffffff81111561133d5761133c6110e7565b5b80860161134a8982611173565b8552602085019450505060208101905061131a565b5050509392505050565b600082601f83011261137e5761137d6110e7565b5b813561138e8482602086016112e2565b91505092915050565b600080604083850312156113ae576113ad610dc2565b5b600083013567ffffffffffffffff8111156113cc576113cb610dc7565b5b6113d8858286016111a1565b925050602083013567ffffffffffffffff8111156113f9576113f8610dc7565b5b61140585828601611369565b9150509250929050565b6000806040838503121561142657611425610dc2565b5b600083013567ffffffffffffffff81111561144457611443610dc7565b5b61145085828601611173565b925050602083013567ffffffffffffffff81111561147157611470610dc7565b5b61147d85828601611173565b9150509250929050565b600082825260208201905092915050565b60006114a382610e64565b6114ad8185611487565b93506114bd818560208601610e80565b6114c681610eb3565b840191505092915050565b600060208201905081810360008301526114eb8184611498565b905092915050565b60006020828403121561150957611508610dc2565b5b600061151784828501610de3565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061155a82610d84565b915061156583610d84565b92508282101561157857611577611520565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806115f957607f821691505b6020821081141561160d5761160c6115b2565b5b50919050565b600061161e82610d84565b915061162983610d84565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561165e5761165d611520565b5b828201905092915050565b600061167482610d84565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156116a7576116a6611520565b5b600182019050919050565b600081905092915050565b60006116c882610e64565b6116d281856116b2565b93506116e2818560208601610e80565b80840191505092915050565b60006116fa82846116bd565b915081905092915050565b60008190508160005260206000209050919050565b60008154611727816115e1565b61173181866116b2565b9450600182166000811461174c576001811461175d57611790565b60ff19831686528186019350611790565b61176685611705565b60005b8381101561178857815481890152600182019150602081019050611769565b838801955050505b50505092915050565b60006117a5828461171a565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220dea36fa40ef8b18620e7e4a0109e3552f441405385443c7c19e978ed6fb7d5f964736f6c63430008090033";

export class FileStorage__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FileStorage> {
    return super.deploy(overrides || {}) as Promise<FileStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FileStorage {
    return super.attach(address) as FileStorage;
  }
  connect(signer: Signer): FileStorage__factory {
    return super.connect(signer) as FileStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FileStorageInterface {
    return new utils.Interface(_abi) as FileStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FileStorage {
    return new Contract(address, _abi, signerOrProvider) as FileStorage;
  }
}
